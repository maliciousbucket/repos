
name: "Build-Publish"
description: "Build and Publish Image"

inputs:
  registry:
    description: Container Registry
    required: true
  username:
    description: GitHub User
    required: true
  image-name:
    description: Image Name
    required: true
  token:
    description: Token / Password for GitHub
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      id: checkout-step
    - name: Log in to the Container registry
      id: login-step
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.token }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name}}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      id: artifact-step
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ inputs.registry }}/${{ inputs.image-name }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true


#
#name: Create and publish a Docker image
#
#on:
#  push:
#    branches: ['release']
#  workflow_dispatch:
#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: ${{ github.repository }}
#
#jobs:
#  build-and-push-image:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#      id-token: write
#      #
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.TOKEN }}
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v1
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
#
